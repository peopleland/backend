// Code generated by MockGen. DO NOT EDIT.
// Source: backend/app/user/internal/biz (interfaces: TwitterRepo)

// Package mock_biz is a generated GoMock package.
package mock_biz

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTwitterRepo is a mock of TwitterRepo interface.
type MockTwitterRepo struct {
	ctrl     *gomock.Controller
	recorder *MockTwitterRepoMockRecorder
}

// MockTwitterRepoMockRecorder is the mock recorder for MockTwitterRepo.
type MockTwitterRepoMockRecorder struct {
	mock *MockTwitterRepo
}

// NewMockTwitterRepo creates a new mock instance.
func NewMockTwitterRepo(ctrl *gomock.Controller) *MockTwitterRepo {
	mock := &MockTwitterRepo{ctrl: ctrl}
	mock.recorder = &MockTwitterRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTwitterRepo) EXPECT() *MockTwitterRepoMockRecorder {
	return m.recorder
}

// GetTwitterUserTimeline mocks base method.
func (m *MockTwitterRepo) GetTwitterUserTimeline(arg0 string) []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTwitterUserTimeline", arg0)
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetTwitterUserTimeline indicates an expected call of GetTwitterUserTimeline.
func (mr *MockTwitterRepoMockRecorder) GetTwitterUserTimeline(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTwitterUserTimeline", reflect.TypeOf((*MockTwitterRepo)(nil).GetTwitterUserTimeline), arg0)
}